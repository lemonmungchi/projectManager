server:
  port: 8082

spring:
  application:
    name: jwt
  profiles:
    active: default

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

  cloud:
    stream:
      kafka:
        binder:
          brokers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}  # ✅ 기본값은 로컬, Docker 환경 변수 사용 가능
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: jwt
          destination: jwt-topic
          contentType: application/json
        event-out:
          destination: jwt-topic
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

---
# Docker 실행 환경 (프로필: docker)
spring:
  config:
    activate:
      on-profile: docker

  server:
    port: 8082  # ✅ Docker에서도 명확한 포트 지정

  cloud:
    stream:
      kafka:
        binder:
          brokers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}  # ✅ Docker 네트워크에서 Kafka 접근 가능하도록 설정
